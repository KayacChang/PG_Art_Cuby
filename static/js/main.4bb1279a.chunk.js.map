{"version":3,"sources":["reportWebVitals.ts","Canvas.tsx","Cuby/Trapezoid.ts","Cuby/Circle.ts","Cuby/Curve.ts","Cuby/index.ts","Cuby/Block.ts","Cuby/Face.ts","index.tsx","App.ts"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","memo","init","props","ref","view","Application","Trapezoid","context","paths","color","beginFill","drawPolygon","map","x","y","Point","endFill","Circle","r","drawCircle","Curve","w","from","end","controlA","controlB","lineStyle","moveTo","bezierCurveTo","Cuby","type","size","h","blue","light","dark","red","yellow","green","orange","purple","indigo","Graphics","block","offset","Math","sqrt","inner","drawRoundedRect","Block","unit","A","B","drawEllipse","Face","config","backgroundColor","antialias","App","useState","setColor","Canvas","app","position","set","screen","width","height","pivot","stage","addChild","Game","style","parentElement","offsetWidth","offsetHeight","offsetTop","Object","assign","top","name","onChange","event","target","value","key","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4bb1279a.chunk.js","sourcesContent":["import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","import React, { memo } from \"react\";\nimport { Application } from \"pixi.js\";\n\ntype ApplicationProps = {\n  autoStart?: boolean;\n  width?: number;\n  height?: number;\n  transparent?: boolean;\n  autoDensity?: boolean;\n  antialias?: boolean;\n  preserveDrawingBuffer?: boolean;\n  resolution?: number;\n  forceCanvas?: boolean;\n  backgroundColor?: number;\n  clearBeforeRender?: boolean;\n  powerPreference?: string;\n  sharedTicker?: boolean;\n  sharedLoader?: boolean;\n  resizeTo?: Window | HTMLElement;\n};\n\ntype Props = ApplicationProps & {\n  init: (app: Application) => void;\n};\n\nexport default memo(({ init, ...props }: Props) => (\n  <canvas\n    ref={(view: HTMLCanvasElement) => init(new Application({ view, ...props }))}\n  ></canvas>\n));\n","import { Graphics, Point } from \"pixi.js\";\n\ntype Props = {\n  paths: number[][];\n  color: number;\n};\nexport default function Trapezoid({ paths, color }: Props, context: Graphics) {\n  context.beginFill(color);\n  context.drawPolygon(paths.map(([x, y]) => new Point(x, y)));\n  context.endFill();\n\n  return context;\n}\n","import { Graphics } from \"pixi.js\";\n\ntype Props = {\n  x: number;\n  y: number;\n  r: number;\n  color: number;\n};\nexport default function Circle({ x, y, r, color }: Props, context: Graphics) {\n  context.beginFill(color);\n  context.drawCircle(x, y, r);\n  context.endFill();\n  return context;\n}\n","import { Graphics } from \"pixi.js\";\n\ntype Point = { x: number; y: number };\ntype Props = {\n  w: number;\n  from: Point;\n  end: Point;\n  controlA: Point;\n  controlB: Point;\n};\n\nexport default function Curve(\n  { w, from, end, controlA, controlB }: Props,\n  context: Graphics\n) {\n  context.lineStyle(w);\n  context.moveTo(from.x, from.y);\n  context.bezierCurveTo(\n    controlA.x,\n    controlA.y,\n    controlB.x,\n    controlB.y,\n    end.x,\n    end.y\n  );\n\n  return context;\n}\n","import { Graphics } from \"pixi.js\";\nimport Block from \"./Block\";\nimport Face from \"./Face\";\n\ntype Color =\n  | \"blue\"\n  | \"red\"\n  | \"yellow\"\n  | \"green\"\n  | \"orange\"\n  | \"purple\"\n  | \"indigo\";\nexport default function Cuby(type: Color, size: number) {\n  const [x, y, w, h, r] = [0, 0, size, size, 4];\n\n  const color = {\n    blue: { light: 0x49bdff, dark: 0x2d97f7 },\n    red: { light: 0xf71d30, dark: 0xc11837 },\n    yellow: { light: 0xffdb01, dark: 0xfe8601 },\n    green: { light: 0x26e552, dark: 0x1da84b },\n    orange: { light: 0xfe8602, dark: 0xfe5e02 },\n    purple: { light: 0xbf5af2, dark: 0xaf52de },\n    indigo: { light: 0x6b69da, dark: 0x5e5ce6 },\n  }[type];\n\n  const context = new Graphics();\n  Block({ x, y, w, h, r, color }, context);\n  Face({ w, h }, context);\n\n  return context;\n}\n","import { Graphics } from \"pixi.js\";\nimport Trapezoid from \"./Trapezoid\";\n\ntype Props = {\n  x: number;\n  y: number;\n  w: number;\n  h: number;\n  r: number;\n  color: { light: number; dark: number };\n};\nexport default function Block(\n  { x, y, w, h, r, color }: Props,\n  block: Graphics\n) {\n  const offset = (Math.sqrt(w * h) * 8) / 100;\n  const inner = {\n    x: x + offset,\n    y: y + offset,\n    w: w - 2 * offset,\n    h: h - 2 * offset,\n  };\n\n  // Border\n  block.beginFill(0x000000);\n  block.drawRoundedRect(x, y, w, h, r);\n  block.endFill();\n\n  // Content\n  block.beginFill(color.light);\n  block.drawRoundedRect(inner.x, inner.y, inner.w, inner.h, r);\n  block.endFill();\n\n  // Reflect 1\n  Trapezoid(\n    {\n      paths: [\n        [offset, offset],\n        [offset + inner.w, offset],\n        [inner.w, 2 * offset],\n        [2 * offset, 2 * offset],\n      ],\n      color: 0xffffff,\n    },\n    block\n  );\n\n  // Reflect 2\n  Trapezoid(\n    {\n      paths: [\n        [offset, offset],\n        [2 * offset, 2 * offset],\n        [2 * offset, inner.h],\n        [offset, inner.h + offset],\n      ],\n      color: 0xffffff,\n    },\n    block\n  );\n\n  // Reflect 3\n  Trapezoid(\n    {\n      paths: [\n        [2 * offset, inner.h],\n        [inner.w, inner.h],\n        [offset + inner.w, inner.h + offset],\n        [offset, inner.h + offset],\n      ],\n      color: color.dark,\n    },\n    block\n  );\n\n  // Reflect 4\n  Trapezoid(\n    {\n      paths: [\n        [inner.w, inner.h],\n        [offset + inner.w, inner.h + offset],\n        [offset + inner.w, offset],\n        [inner.w, 2 * offset],\n      ],\n      color: color.dark,\n    },\n    block\n  );\n\n  return block;\n}\n","import { Graphics } from \"pixi.js\";\nimport Circle from \"./Circle\";\nimport Curve from \"./Curve\";\n\ntype Props = {\n  w: number;\n  h: number;\n};\nexport default function Face({ w, h }: Props, context: Graphics) {\n  const unit = (Math.sqrt(w * h) * 8) / 100;\n\n  // Eyes 1\n  Circle(\n    { x: 3.8 * unit, y: 5.5 * unit, r: unit / 2, color: 0x000000 },\n    context\n  );\n  // Eyes 2\n  Circle(\n    { x: w - 3.8 * unit, y: 5.5 * unit, r: unit / 2, color: 0x000000 },\n    context\n  );\n  // Mouse\n  const A = { x: 5 * unit, y: 6.5 * unit };\n  const B = { x: w - 5 * unit, y: 6.5 * unit };\n\n  context.beginFill(0x000000);\n  Curve(\n    {\n      w: unit / 4,\n      from: A,\n      end: B,\n      controlA: { x: (B.x - A.x) * (1 / 4) + A.x, y: 6.2 * unit },\n      controlB: { x: (B.x - A.x) * (3 / 4) + A.x, y: 6.2 * unit },\n    },\n    context\n  );\n\n  Curve(\n    {\n      w: unit / 4,\n      from: A,\n      end: B,\n      controlA: { x: (B.x - A.x) * (1 / 20) + A.x, y: 7.8 * unit },\n      controlB: { x: (B.x - A.x) * (19 / 20) + A.x, y: 7.8 * unit },\n    },\n    context\n  );\n  context.endFill();\n\n  context.beginFill(0xff8502);\n  context.drawEllipse(w / 2, h / 2 + (unit * 3) / 4, unit, unit / 2);\n  context.endFill();\n\n  return context;\n}\n","import React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport Canvas from \"./Canvas\";\nimport Game from \"./App\";\n\nconst config = {\n  backgroundColor: 0xffffff,\n  antialias: true,\n};\ntype Color =\n  | \"blue\"\n  | \"red\"\n  | \"yellow\"\n  | \"green\"\n  | \"orange\"\n  | \"purple\"\n  | \"indigo\";\n\nfunction App() {\n  const [color, setColor] = useState(\"blue\");\n\n  return (\n    <div>\n      <Canvas init={(app) => Game(app, color as Color)} {...config} />\n      <div\n        style={{\n          position: \"absolute\",\n        }}\n        ref={(ref: HTMLDivElement) => {\n          if (!ref || !ref.parentElement) {\n            return;\n          }\n          const { offsetWidth, offsetHeight, offsetTop } = ref.parentElement;\n          Object.assign(ref.style, {\n            top: `${offsetTop}px`,\n            width: `${offsetWidth}px`,\n            height: `${offsetHeight}px`,\n          });\n        }}\n      >\n        <select name=\"color\" onChange={(event) => setColor(event.target.value)}>\n          {[\"blue\", \"red\", \"yellow\", \"green\", \"orange\", \"purple\", \"indigo\"].map(\n            (value) => (\n              <option key={value} value={value}>\n                {value}\n              </option>\n            )\n          )}\n        </select>\n      </div>\n    </div>\n  );\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import { Application } from \"pixi.js\";\nimport Cuby from \"./Cuby\";\n\ntype Color =\n  | \"blue\"\n  | \"red\"\n  | \"yellow\"\n  | \"green\"\n  | \"orange\"\n  | \"purple\"\n  | \"indigo\";\nexport default function main(app: Application, color: Color) {\n  const block = Cuby(color, 100);\n\n  block.position.set(app.screen.width / 2, app.screen.height / 2);\n  block.pivot.set(block.width / 2, block.height / 2);\n\n  app.stage.addChild(block);\n}\n"],"sourceRoot":""}